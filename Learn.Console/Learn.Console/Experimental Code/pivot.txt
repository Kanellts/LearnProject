


using System;
using System.Linq;
using Npgsql;

using var db = new StudentsContext();

// Note: This sample requires the database to be created before running.
Console.WriteLine($"Database path: {db.DbPath}.");

// Create
Console.WriteLine("Inserting a new student");
db.Add(new Student(1,"Jon Smith",20));

db.SaveChanges();

// // Read
// Console.WriteLine("Querying for a blog");
// var blog = db.Blogs
//     .OrderBy(b => b.BlogId)
//     .First();

// Update
// Console.WriteLine("Updating the blog and adding a post");
// blog.Url = "https://devblogs.microsoft.com/dotnet";
// blog.Posts.Add(
//     new Post { Title = "Hello World", Content = "I wrote an app using EF Core!" });
// db.SaveChanges();

// Delete
Console.WriteLine("Delete a student");
// db.Remove(Student);
// db.SaveChanges();
// using NpgsqlCommand cmd = new NpgsqlCommand("SELECT * FROM students", connection);

//         using NpgsqlDataReader reader = cmd.ExecuteReader();

//         while (reader.Read())
//         {
//             Console.WriteLine(reader["column_name"]);
//             // Use the fetched results
//         }

// string connectionString = "Host=localhost;Port=5432:5432;Database=database;User Id=postgres;Password=pwd;";

        // using NpgsqlConnection connection = new NpgsqlConnection(connectionString);
        // connection.Open();

        // using (var db = new StudentsContext())
        // {
        //     Console.Write("Enter credentials for a new student:");
        //     var id = Convert.ToInt32(Console.ReadLine());
        //     var name = Console.ReadLine();
        //     var age = Convert.ToInt32(Console.ReadLine());

        //     var student = new Student(id,name,age);
        // }
        // // using NpgsqlCommand cmd = new NpgsqlCommand("SELECT * FROM students", connection);

        // using NpgsqlDataReader reader = cmd.ExecuteReader();

        // while (reader.Read())
        // {
        //     Console.WriteLine(reader["column_name"]);
        //     // Use the fetched results
        // }
    }

public partial class InitialMigration : Migration
{
    protected override void Up(MigrationBuilder migrationBuilder)
    {
      
    }
    protected override void Down(MigrationBuilder migrationBuilder)
    {
        migrationBuilder.DropTable(
            name: "Student");
    }
}

public partial class InitialMigration : Migration
{
    protected override void Up(MigrationBuilder migrationBuilder)
    {
     
        migrationBuilder.Sql(@"CREATE PROCEDURE MyCustomProcedure
                               AS
                               SELECT * FROM Student");
    }
    protected override void Down(MigrationBuilder migrationBuilder)
    {
        migrationBuilder.DropTable(
            name: "Student");
        migrationBuilder.Sql(@"DROP PROCEDURE MyCustomProcedure");
    }
}

// protected override void Seed(StudentsContext context)
// {
//     context.Authors.AddOrUpdate(x => x.Id,
//         new Author() { Id = 1, Name = "Jane Austen" },
//         new Author() { Id = 2, Name = "Charles Dickens" },
//         new Author() { Id = 3, Name = "Miguel de Cervantes" }
//         );

//     context.Books.AddOrUpdate(x => x.Id,
//         new Book() { Id = 1, Title = "Pride and Prejudice", Year = 1813, AuthorId = 1, 
//             Price = 9.99M, Genre = "Comedy of manners" },
//         new Book() { Id = 2, Title = "Northanger Abbey", Year = 1817, AuthorId = 1, 
//             Price = 12.95M, Genre = "Gothic parody" },
//         new Book() { Id = 3, Title = "David Copperfield", Year = 1850, AuthorId = 2, 
//             Price = 15, Genre = "Bildungsroman" },
//         new Book() { Id = 4, Title = "Don Quixote", Year = 1617, AuthorId = 3, 
//             Price = 8.95M, Genre = "Picaresque" }
//         );
// }